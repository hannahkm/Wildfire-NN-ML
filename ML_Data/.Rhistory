plot(x=coord_values[,1], y=coord_values[,2],
col=rev(heat.colors(len))
[as.numeric(cut(coord_values$value,breaks=len/0.5))], pch=15, cex = 1.5,
xlim=c(lat_min,lat_max), ylim=c(long_min,long_max), tck=-.03,
xlab="latitude", ylab="longitude", main="Fire Power in California")
plot(x=coord_values[,1], y=coord_values[,2],
col=rev(heat.colors(len))
[as.numeric(cut(coord_values$value,breaks=len/0.5))], pch=15, cex = 2,
xlim=c(lat_min,lat_max), ylim=c(long_min,long_max), tck=-.03,
xlab="latitude", ylab="longitude", main="Fire Power in California")
plot(x=coord_values[,1], y=coord_values[,2],
col=rev(heat.colors(len))
[as.numeric(cut(coord_values$value,breaks=len/0.5))], pch=15, cex = 2.5,
xlim=c(lat_min,lat_max), ylim=c(long_min,long_max), tck=-.03,
xlab="latitude", ylab="longitude", main="Fire Power in California")
tmax_humidity <- read.csv("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")
range(tmax_humidity$fwi)
mean(tmax_humidity$fcount_aqua)
View(tmax_humidity$fwi, tmax_humidity$fcount_aqua)
View(tmax_humidity[,c("fwi", "fcount_aqua")])
plot(x=coord_values[,1], y=coord_values[,2],
col=rev(heat.colors(len))
[as.numeric(cut(coord_values$value,breaks=len/0.5))], pch=15, cex = 2.5,
xlim=c(lat_min,lat_max), ylim=c(long_min,long_max), tck=-.03,
xlab="longitude", ylab="latitude", main="Fire Power in California")
df <- tmax_humidity[,c("fwi", "fcount_aqua")]
library("BBmisc")
df[,2] <- normalize(df[,2])
View(df)
num_bins <- ceiling(range(df$fcount_aqua)[2]/15)
num_bins
num_bins <- ceiling(range(df$fcount_aqua)[2])
num_bins
range(df$fcount_aqua)
df[,2] <- normalize(df[,2], range=range(df$fwi))
tmax_humidity <- read.csv("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")
df <- tmax_humidity[,c("fwi", "fcount_aqua")]
df[,2] <- normalize(df[,2], range=range(df$fwi))
View(df)
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
View(bin_freq)
range(df$fcount_aqua)
tmax_humidity <- read.csv("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")
df <- tmax_humidity[,c("fwi", "fcount_aqua")]
df[,2] <- normalize(df[,2], range=c(min(df$fwi), max(df$fwi)))
range(df$fcount_aqua)
num_bins
tmax_humidity <- read.csv("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")
df <- tmax_humidity[,c("fwi", "fcount_aqua")]
df[,2] <- normalize(df[,2], range=c(min(df$fwi), max(df$fwi)))
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split2 <- bin(df$fwi, nbins = num_bins, method = "length")
bin_freq2 <- as.data.frame(table(bin_split2))
bin_names2 <- data.frame(matrix(ncol = 1))
View(as.data.frame(cbind(bin_split, bin_split2)))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names2,substr(bin_split2[i],2,lapply(strsplit(toString(
bin_split2[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
bin_names2 <- bin_names2[-1,]
bin_names2 <- as.numeric(as.character(bin_names2))
View(bin_names)
VieW(bin_names2)
View(bin_names2)
nrow(df)
nrow(bin_split)
NROW(bin_split)
View(as.data.frame(cbind(bin_split, bin_split2)))
range(bin_split2)
range(as.data.frame(bin_split2))
class(bin_split2)
range(as.numeric(as.character(bin_split2)))
range(as.numeric(bin_split2))
bin_split[1]
View(bin_split)
bin_names[1]
tmax_humidity <- read.csv("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")
df <- tmax_humidity[,c("fwi", "fcount_aqua")]
df[,2] <- normalize(df[,2], range=c(min(df$fwi), max(df$fwi)))
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split2 <- bin(df$fwi, nbins = num_bins, method = "length")
bin_freq2 <- as.data.frame(table(bin_split2))
bin_names2 <- data.frame(matrix(ncol = 1))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names2,substr(bin_split2[i],2,lapply(strsplit(toString(
bin_split2[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
bin_names2 <- bin_names2[-1,]
bin_names2 <- as.numeric(as.character(bin_names2))
bin_names[1]
which(bin_names==-0.68)
length(which(bin_names==-0.68))
View(bin_freq)
sort <- sort(unique(bin_names))
sort2 <- sort(unique(bin_names2))
right <- 0
total <- nrow(df)
which(sort==bin_names[1])
which(sort==bin_names[230])
which(sort==bin_names[300])
j <- 1
which(sort==bin_names[j]) == which(sort==bin_names2[j])
for (j in 1:nrow(df)){
if (which(sort==bin_names[j]) == which(sort==bin_names2[j])){
right <- right + df[j,3]
}
}
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort==bin_names[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort==bin_names2[j]))){
right <- right + df[j,3]
}
}
which(sort==bin_names[300])
which(sort==bin_names[300])[1]
class(which(sort==bin_names[300]))
j
which(sort==bin_names[j]) == which(sort==bin_names2[j])
which(sort==bin_names[j]) == which(sort2==bin_names2[j])
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort==bin_names[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + df[j,3]
}
}
acc <- (right/total)*100
acc
num_bins <- ceiling(range(df$fcount_aqua)[2]/1.5)
num_bins
tmax_humidity <- read.csv("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")
df <- tmax_humidity[,c("fwi", "fcount_aqua")]
df[,2] <- normalize(df[,2], range=c(min(df$fwi), max(df$fwi)))
num_bins <- ceiling(range(df$fcount_aqua)[2]/1.5)
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split2 <- bin(df$fwi, nbins = num_bins, method = "length")
bin_freq2 <- as.data.frame(table(bin_split2))
bin_names2 <- data.frame(matrix(ncol = 1))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names2,substr(bin_split2[i],2,lapply(strsplit(toString(
bin_split2[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
bin_names2 <- bin_names2[-1,]
bin_names2 <- as.numeric(as.character(bin_names2))
sort <- sort(unique(bin_names))
sort2 <- sort(unique(bin_names2))
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort==bin_names[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + df[j,3]
}
}
acc <- (right/total)*100
acc
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort==bin_names[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + 1
}
}
acc <- (right/total)*100
acc
num_bins <- ceiling(range(df$fcount_aqua)[2]/3)
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split2 <- bin(df$fwi, nbins = num_bins, method = "length")
bin_freq2 <- as.data.frame(table(bin_split2))
bin_names2 <- data.frame(matrix(ncol = 1))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names2,substr(bin_split2[i],2,lapply(strsplit(toString(
bin_split2[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
bin_names2 <- bin_names2[-1,]
bin_names2 <- as.numeric(as.character(bin_names2))
sort <- sort(unique(bin_names))
sort2 <- sort(unique(bin_names2))
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort==bin_names[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + 1
}
}
acc <- (right/total)*100
acc
num_bins <- ceiling(range(df$fcount_aqua)[2]/2)
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split2 <- bin(df$fwi, nbins = num_bins, method = "length")
bin_freq2 <- as.data.frame(table(bin_split2))
bin_names2 <- data.frame(matrix(ncol = 1))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names2,substr(bin_split2[i],2,lapply(strsplit(toString(
bin_split2[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
bin_names2 <- bin_names2[-1,]
bin_names2 <- as.numeric(as.character(bin_names2))
sort <- sort(unique(bin_names))
sort2 <- sort(unique(bin_names2))
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort==bin_names[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + 1
}
}
acc <- (right/total)*100
acc
num_bins <- ceiling(range(df)[2])
num_bins
bin_split <- bin(df, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
sort <- sort(unique(bin_names))
right <- 0
total <- nrow(df)
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split2 <- bin(df$fwi, nbins = num_bins, method = "length")
bin_freq2 <- as.data.frame(table(bin_split2))
bin_names2 <- data.frame(matrix(ncol = 1))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names2,substr(bin_split2[i],2,lapply(strsplit(toString(
bin_split2[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
bin_names2 <- bin_names2[-1,]
bin_names2 <- as.numeric(as.character(bin_names2))
sort <- sort(unique(bin_names))
sort2 <- sort(unique(bin_names2))
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort==bin_names2[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + df[j,3]
}
}
acc <- (right/total)*100
acc
num_bins <- ceiling(range(df$fcount_aqua)[2]/3)
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split2 <- bin(df$fwi, nbins = num_bins, method = "length")
bin_freq2 <- as.data.frame(table(bin_split2))
bin_names2 <- data.frame(matrix(ncol = 1))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names2,substr(bin_split2[i],2,lapply(strsplit(toString(
bin_split2[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
bin_names2 <- bin_names2[-1,]
bin_names2 <- as.numeric(as.character(bin_names2))
sort <- sort(unique(bin_names))
sort2 <- sort(unique(bin_names2))
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort==bin_names2[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + df[j,3]
}
}
acc <- (right/total)*100
acc
num_bins <- ceiling(range(df$fcount_aqua)[2]/3)
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split2 <- bin(df$fwi, nbins = num_bins, method = "length")
bin_freq2 <- as.data.frame(table(bin_split2))
bin_names2 <- data.frame(matrix(ncol = 1))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names2,substr(bin_split2[i],2,lapply(strsplit(toString(
bin_split2[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
bin_names2 <- bin_names2[-1,]
bin_names2 <- as.numeric(as.character(bin_names2))
sort <- sort(unique(bin_names))
sort2 <- sort(unique(bin_names2))
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort2==bin_names2[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + df[j,3]
}
}
acc <- (right/total)*100
acc
right <- 0
total <- nrow(df)
for (j in 1:nrow(df)){
ind1 <- which(sort==bin_names[j])
ind2 <- which(sort2==bin_names2[j])
if ((length(ind1)>0 && length(ind2)>0) &&
(which(sort==bin_names[j]) == which(sort2==bin_names2[j]))){
right <- right + 1
}
}
acc <- (right/total)*100
acc
View(bin_names)
nrow(bin_names)
NROW(bin_names)
View(bin_split)
View(df)
range(df$fcount_aqua)
range(df$fwi)
i <- 1
View(bin_names)
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
View(bin_split)
lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1))
lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)
substr(bin_split[i],lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')+1),length(bin_split[i]))
i
lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')+1)
i
View(bin_split)
substr(bin_split[i],lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')+1),length(bin_split[i])-1)
length(bin_split[i])-1)
length(bin_split[i])-1
substr(bin_split[i],lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')+1),nchar(bin_split[i])-1)
class(bin_split[1])
substr(bin_split[i],lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')+1),nchar(as.character(bin_split[i]))-1)
bin_split$min <- c()
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split$min <- as.data.frame(c())
bin_split$max <- as.data.frame(c())
View(bin_split)
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split$min <- as.data.frame(as.matrix(c()))
bin_split$min <- NA
bin_split <- cbind(bin_split, as.data.frame(c()), as.data.frame(c()))
bin_split <- cbind(bin_split, as.data.frame(matrix(nrow=nrow(bin_split))),
as.data.frame(matrix(nrow=nrow(bin_split))))
bin_split <- cbind(bin_split, as.data.frame(as.matrix(nrow=nrow(bin_split))),
as.data.frame(as.matrix(nrow=nrow(bin_split))))
bin_split <- cbind(bin_split, as.data.frame(matrix(nrow=nrow(bin_split))),
as.data.frame(matrix(nrow=nrow(bin_split))))
nrow(bin_split)
bin_split <- cbind(bin_split, as.data.frame(matrix(nrow=NROW(bin_split))),
as.data.frame(matrix(nrow=NROW(bin_split))))
colnames(bin_split) <- c("min", "max", colnames(bin_split))
colnames(bin_split) <- c("min", "max", colnames(bin_split)[-1:2])
colnames(bin_split)
View(bin_split)
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split <- cbind(bin_split, as.data.frame(matrix(nrow=NROW(bin_split))),
as.data.frame(matrix(nrow=NROW(bin_split))))
colnames(bin_split) <- c("min", "max", colnames(bin_split)[-1:2])
colnames(bin_split)
colnames(bin_split)[-1:2]
colnames(bin_split)[1]
colnames(bin_split)[-c(1,2)]
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split <- cbind(as.data.frame(matrix(nrow=NROW(bin_split))),
as.data.frame(matrix(nrow=NROW(bin_split))),bin_split)
colnames(bin_split) <- c("min", "max", colnames(bin_split)[-1:2])
num_bins <- ceiling(range(df$fcount_aqua)[2])
bin_split <- bin(df$fcount_aqua, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
bin_split <- cbind(as.data.frame(matrix(nrow=NROW(bin_split))),
as.data.frame(matrix(nrow=NROW(bin_split))),bin_split)
colnames(bin_split) <- c("min", "max", colnames(bin_split)[-c(1,2)])
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names1 <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names,substr(bin_split[i],lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')+1),nchar(as.character(bin_split[i]))-1))
bin_split[i,1] <- bin_names1
bin_split[i,2] <- bin_names2
}
i
for (i in 1:NROW(bin_split)){
bin_names1 <- rbind(bin_names,substr(bin_split[i,3],2,lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names,substr(bin_split[i,3],lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')+1),nchar(as.character(bin_split[i]))-1))
bin_split[i,1] <- bin_names1
bin_split[i,2] <- bin_names2
}
View(bin_split)
for (i in 1:NROW(bin_split)){
bin_names1 <- rbind(bin_names,substr(bin_split[i,3],2,lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')-1)))
bin_names2 <- rbind(bin_names,substr(bin_split[i,3],lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')+1),nchar(as.character(bin_split[i,3]))-1))
bin_split[i,1] <- bin_names1
bin_split[i,2] <- bin_names2
}
warnings()
for (i in 1:NROW(bin_split)){
bin_names1 <- substr(bin_split[i,3],2,lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')-1)))
bin_names2 <- substr(bin_split[i,3],lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')+1),nchar(as.character(bin_split[i,3]))-1))
bin_split[i,1] <- bin_names1
bin_split[i,2] <- bin_names2
}
for (i in 1:NROW(bin_split)){
bin_names1 <- substr(bin_split[i,3],2,lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')-1))
bin_names2 <- substr(bin_split[i,3],lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')+1),nchar(as.character(bin_split[i,3]))-1))
bin_split[i,1] <- bin_names1
bin_split[i,2] <- bin_names2
}
for (i in 1:NROW(bin_split)){
bin_names1 <- substr(bin_split[i,3],2,lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')-1))
bin_names2 <- substr(bin_split[i,3],lapply(strsplit(toString(
bin_split[i,3]), ''), function(x) which(x == ',')+1),nchar(as.character(bin_split[i,3]))-1)
bin_split[i,1] <- bin_names1
bin_split[i,2] <- bin_names2
}
View(bin_names)
View(bin_split)
