vertex.sort[[1]]
vertex.sort <- sort(vertex.size)
vertex.sort[[1]]
vertex.sort <- sort(vertex.size)
for (i in (data.mapper2$num_vertices):1) { #i is the cluster number
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[i]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df)
}
i
(data.mapper2$num_vertices):1
plot_density2 <- function(data_a, ind){
data_a$frp_aqua <- data_a$frp_aqua+10
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.05)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq",
main=cat("density of cluster number"),ind)
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
data <- read.csv("/Users/hk/Desktop/School/MRHS/11th\ Grade/R/NN-ML/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")[, c("t2mmax",
"qv2m", "frp_aqua", "year", "month", "day")] #2,8
data.dist <- dist(data[, c(1, 2)])
par(mfrow = c(1, 1))
data.mapper2 <- mapper2D(
distance_matrix = dist(data.frame(x = data[, 1], y = data[, 2])),
filter_values = list(data[,1],data[,2]),
num_intervals = c(5, 5),
percent_overlap = 60,
num_bins_when_clustering = 60
)
data.graph <-
graph.adjacency(data.mapper2$adjacency, mode = "undirected")
vertex.size <- rep(0, data.mapper2$num_vertices)
df <- as.data.frame(matrix(ncol=ncol(data)))
colnames(df) <- colnames(data)
for (i in 1:data.mapper2$num_vertices) { #i is the cluster number
points.in.vertex <- data.mapper2$points_in_vertex[[i]] #pts in cluster
len <- length(points.in.vertex)
count <- 0
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
count <- count + abs(data[points.in.vertex[[j]], 3])
}
}
vertex.size[i] <- count
}
vertex.sort <- sort(vertex.size)
for (i in (data.mapper2$num_vertices):1) { #i is the cluster number
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[i]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
}
library(ggplot2)
library(package = "TDA")
#devtools::install_github("paultpearson/TDAmapper")
library(TDAmapper)
library(igraph)
#install.packages("BBmisc")
library(BBmisc)
#install.packages("plotrix")
library("plotrix")
library("circlize")
library("plyr")
data <- read.csv("/Users/hk/Desktop/School/MRHS/11th\ Grade/R/NN-ML/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")[, c("t2mmax",
"qv2m", "frp_aqua", "year", "month", "day")] #2,8
data.dist <- dist(data[, c(1, 2)])
par(mfrow = c(1, 1))
data.mapper2 <- mapper2D(
distance_matrix = dist(data.frame(x = data[, 1], y = data[, 2])),
filter_values = list(data[,1],data[,2]),
num_intervals = c(5, 5),
percent_overlap = 60,
num_bins_when_clustering = 60
)
data.graph <-
graph.adjacency(data.mapper2$adjacency, mode = "undirected")
vertex.size <- rep(0, data.mapper2$num_vertices)
df <- as.data.frame(matrix(ncol=ncol(data)))
colnames(df) <- colnames(data)
for (i in 1:data.mapper2$num_vertices) { #i is the cluster number
points.in.vertex <- data.mapper2$points_in_vertex[[i]] #pts in cluster
len <- length(points.in.vertex)
count <- 0
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
count <- count + abs(data[points.in.vertex[[j]], 3])
}
}
vertex.size[i] <- count
}
vertex.sort <- sort(vertex.size)
for (i in (data.mapper2$num_vertices):1) { #i is the cluster number
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[i]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
}
View(vertex.sort)
dev.off()
vertex.sort <- sort(vertex.size)
for (i in (data.mapper2$num_vertices):1) { #i is the cluster number
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[i]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
}
i
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[i]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
data_a <- df
ind
data_a$frp_aqua <- data_a$frp_aqua+10
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.05)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
View(bin_freq_days)
View(Df)
View(df)
len
ind
for (i in (data.mapper2$num_vertices):1) { #i is the cluster number
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[ind]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
}
i
ind
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[ind]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
View(df)
data_a <- df
data_a$frp_aqua <- data_a$frp_aqua+10
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.05)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
View(bin_frew_days)
View(bin_freq_days)
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq",
main=cat("density of cluster number"),ind)
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
cat("density of cluster number"),ind
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq",
main=cat("density of cluster number",ind))
cat("density of cluster number",ind)
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq",
main=paste("density of cluster number",ind))
data <- read.csv("/Users/hk/Desktop/School/MRHS/11th\ Grade/R/NN-ML/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")[, c("t2mmax",
"qv2m", "frp_aqua", "year", "month", "day")] #2,8
data.dist <- dist(data[, c(1, 2)])
par(mfrow = c(1, 1))
data.mapper2 <- mapper2D(
distance_matrix = dist(data.frame(x = data[, 1], y = data[, 2])),
filter_values = list(data[,1],data[,2]),
num_intervals = c(5, 5),
percent_overlap = 60,
num_bins_when_clustering = 60
)
data.graph <-
graph.adjacency(data.mapper2$adjacency, mode = "undirected")
vertex.size <- rep(0, data.mapper2$num_vertices)
df <- as.data.frame(matrix(ncol=ncol(data)))
colnames(df) <- colnames(data)
for (i in 1:data.mapper2$num_vertices) { #i is the cluster number
points.in.vertex <- data.mapper2$points_in_vertex[[i]] #pts in cluster
len <- length(points.in.vertex)
count <- 0
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
count <- count + abs(data[points.in.vertex[[j]], 3])
}
}
vertex.size[i] <- count
}
vertex.sort <- sort(vertex.size)
for (i in (data.mapper2$num_vertices):1) { #i is the cluster number
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[ind]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
}
plot_density2 <- function(data_a, ind){
data_a$frp_aqua <- data_a$frp_aqua+10
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.05)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq",
main=paste("density of cluster number",ind))
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
Q
data <- read.csv("/Users/hk/Desktop/School/MRHS/11th\ Grade/R/NN-ML/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")[, c("t2mmax",
"qv2m", "frp_aqua", "year", "month", "day")] #2,8
data.dist <- dist(data[, c(1, 2)])
par(mfrow = c(1, 1))
data.mapper2 <- mapper2D(
distance_matrix = dist(data.frame(x = data[, 1], y = data[, 2])),
filter_values = list(data[,1],data[,2]),
num_intervals = c(5, 5),
percent_overlap = 60,
num_bins_when_clustering = 60
)
data.graph <-
graph.adjacency(data.mapper2$adjacency, mode = "undirected")
vertex.size <- rep(0, data.mapper2$num_vertices)
df <- as.data.frame(matrix(ncol=ncol(data)))
colnames(df) <- colnames(data)
for (i in 1:data.mapper2$num_vertices) { #i is the cluster number
points.in.vertex <- data.mapper2$points_in_vertex[[i]] #pts in cluster
len <- length(points.in.vertex)
count <- 0
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
count <- count + abs(data[points.in.vertex[[j]], 3])
}
}
vertex.size[i] <- count
}
vertex.sort <- sort(vertex.size)
for (i in (data.mapper2$num_vertices):1) { #i is the cluster number
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[ind]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
}
i
plot_density2 <- function(data_a, ind){
data_a$frp_aqua <- data_a$frp_aqua+10
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.05)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq",
main=paste("density of cluster number",ind))
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
for (i in (data.mapper2$num_vertices):1) { #i is the cluster number
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[ind]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
}
i
data.mapper2$points_in_vertex[[ind]]
data.mapper2$num_vertices
ind
i
vertex.sort[[i]]
i
for (i in data.mapper2$num_vertices:(data.mapper2$num_vertices-10)) {
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[ind]]
len <- length(points.in.vertex)
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df, ind)
}
View(df)
plot_density <- function(data_a, data_i){
power <- log(data_a$FP_power,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])/0.05
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]/92
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="n",xlab="bins",ylab="freq/day")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
power <- log(data_i$FP_power,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])/0.05
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]/92
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col="blue")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
data <- read.csv("Users/hk/Desktop/Fire\ Downloads/all_data.csv")
data <- read.csv("/Users/hk/Desktop/Fire\ Downloads/all_data.csv")
head(data)
View(data)
data <- read.csv("/Users/hk/Desktop/Fire\ Downloads/all_data.csv")[-1,]
View(data)
data <- read.csv("/Users/hk/Desktop/Fire\ Downloads/all_data.csv")[-1,-1]
View(data)
rownames(data) <- 1:nrow(data)
View(data)
data_summer <- data[which(data$df_months %in% c("06", "07", "08")),]
power_freq <- as.data.frame(table(log(data_summer$FP_power,10)))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
plot(density(power_freq[,1]))
data_active <- data[which((data$df_years %in%
c("2006", "2008", "2015", "2016"))
& (data$df_months %in% c("06", "07", "08"))),]
View(data_summer)
View(data)
df_months <- sapply(data[,1],substring,6,7)
data <- cbind(df_months, data)
data_summer <- data[which(data$df_months %in% c("06", "07", "08")),]
power_freq <- as.data.frame(table(log(data_summer$FP_power,10)))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
plot(density(power_freq[,1]))
df_years <- sapply(data$Date,substring,1,4)
data <- cbind(df_years, data)
data_active <- data[which((data$df_years %in%
c("2006", "2008", "2015", "2016"))
& (data$df_months %in% c("06", "07", "08"))),]
power_act <- log(data_active$FP_power,10)
power_freq_act <- as.data.frame(table(power_act))
power_freq_act[,1] <- as.numeric(as.character(power_freq_act[,1]))
plot(density(power_freq_act[,1], bw=0.05), col = "red")
data_inactive <- data[which((data$df_years %in% c("2005", "2007", "2010", "2011"))
& (data$df_months %in% c("06", "07", "08"))),]
power_inact <- log(data_inactive$FP_power,10)
power_freq_inact <- as.data.frame(table(power_inact))
power_freq_inact[,1] <- as.numeric(as.character(power_freq_inact[,1]))
lines(density(power_freq_inact[,1], bw=0.05), col = "blue")
plot_density <- function(data_a, data_i){
power <- log(data_a$FP_power,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])/0.05
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]/92
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="n",xlab="bins",ylab="freq/day")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
power <- log(data_i$FP_power,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])/0.05
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]/92
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col="blue")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
data <- read.csv("/Users/hk/Desktop/School/MRHS/11th\ Grade/R/NN-ML/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")[, c("t2mmax",
"qv2m", "frp_aqua", "year", "month", "day")] #2,8
