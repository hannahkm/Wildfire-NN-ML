lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "black")
#north
plot_density2(data_a[which(data_a$FP_latitude>=38),], ind, len, 2)
#south
plot_density2(data_a[which(data_a$FP_latitude<38),], ind, len, 3)
legend("topright", legend=c("total","north","south"), inset = 0.02,
col=c("black","red","blue"), lty=1, cex=0.8, box.lty=0)
#split north and south by 38N: general split between biomes
} else if (region == 2){
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
} else {
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "blue")
}
#lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
vertex.sort <- sort(vertex.size)
data_fp <- read.csv("E:/Fire\ Downloads/all_data.csv")
data_fp$Date <- paste(data_fp$month,data_fp$day,data_fp$year,sep="/")
for (i in data.mapper2$num_vertices:(data.mapper2$num_vertices-10)) {
df <- as.data.frame(matrix(ncol=ncol(data_fp)))
colnames(df) <- colnames(data_fp)
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[ind]]
len <- length(points.in.vertex)
for (j in 1:len) {
row <- points.in.vertex[[j]]
if (!is.na(data[row, 3])) {
date <- paste(data[row,"month"],data[row,"day"],data[row,"year"],sep="/")
df<- as.data.frame(rbind(df, data_fp[which(data_fp$Date==date),]))
}
}
df <- df[-1,]
df <- df[which(df$FP_power>=1),]
#print(as.data.frame(table(df$frp_aqua)))
plot_density2(df, ind, len, 1)
}
library("readr")
library("OneR")
for (i in data.mapper2$num_vertices:(data.mapper2$num_vertices-10)) {
df <- as.data.frame(matrix(ncol=ncol(data_fp)))
colnames(df) <- colnames(data_fp)
ind <- which(vertex.size==vertex.sort[[i]])
points.in.vertex <- data.mapper2$points_in_vertex[[ind]]
len <- length(points.in.vertex)
for (j in 1:len) {
row <- points.in.vertex[[j]]
if (!is.na(data[row, 3])) {
date <- paste(data[row,"month"],data[row,"day"],data[row,"year"],sep="/")
df<- as.data.frame(rbind(df, data_fp[which(data_fp$Date==date),]))
}
}
df <- df[-1,]
df <- df[which(df$FP_power>=1),]
#print(as.data.frame(table(df$frp_aqua)))
plot_density2(df, ind, len, 1)
}
data <- read.csv("E:/Fire\ Downloads/all_data.csv")[-1,-1]
data <- read.csv("E:/Fire\ Downloads/all_data.csv")
rownames(data) <- 1:nrow(data)
data_summer <- data[which(data$month %in% c("6", "7", "8")),]
power_freq <- as.data.frame(table(log(data_summer$FP_power,10)))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
plot(density(power_freq[,1]), family = "serif")
data_active <- data[which((data$year %in%
c("2006", "2008", "2015", "2016"))
& (data$month %in% c("6", "7", "8"))),]
power_act <- log(data_active$FP_power,10)
power_freq_act <- as.data.frame(table(power_act))
power_freq_act[,1] <- as.numeric(as.character(power_freq_act[,1]))
plot(density(power_freq_act[,1], bw=0.05), col = "red", family = "serif")
data_inactive <- data[which((data$year %in% c("2005", "2007", "2010", "2011"))
& (data$month %in% c("6", "7", "8"))),]
power_inact <- log(data_inactive$FP_power,10)
power_freq_inact <- as.data.frame(table(power_inact))
power_freq_inact[,1] <- as.numeric(as.character(power_freq_inact[,1]))
lines(density(power_freq_inact[,1], bw=0.05), col = "blue")
plot_density <- function(data_a, data_i){
power <- log(data_a$FP_power,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])/0.05
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]/92
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3],
type="n",xlab="bins", ylab="freq/day", family = "serif",
main="frequency of fire count \n of active and inactive summers")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
#lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
power <- log(data_i$FP_power,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])/0.05
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]/92
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col="blue")
#lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
legend("topright", inset = 0.02, legend = c("active", "inactive"),
col = c("red", "blue"), lty=1, box.lty=0, cex = 0.8, family = "serif")
}
plot_density(data_active, data_inactive)
par(family = "serif")
plot_density <- function(data_a, data_i){
power <- log(data_a$FP_power,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])/0.05
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]/92
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3],
type="n",xlab="bins", ylab="freq/day", family = "serif",
main="frequency of fire count \n of active and inactive summers")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
#lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
power <- log(data_i$FP_power,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])/0.05
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]/92
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col="blue")
#lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
legend("topright", inset = 0.02, legend = c("active", "inactive"),
col = c("red", "blue"), lty=1, box.lty=0, cex = 0.8)
}
plot_density(data_active, data_inactive)
data <- read.csv("E:/Fire\ Downloads/all_data.csv")
lat_max <- max(data$FP_latitude)
lat_min <- min(data$FP_latitude)
long_max <- max(data$FP_longitude)
long_min <- min(data$FP_longitude)
sqr_len <- 0.1
lat_value <- lat_min
long_value <- long_min
row_num <- round(lat_max-lat_min)/0.1
col_num <- round(long_max-long_min)/0.1
sqr_values <- data.frame(matrix(nrow = row_num, ncol=col_num))
coord_values <- data.frame(matrix(ncol = 3))
colnames(coord_values) <- c("x", "y", "value")
row_ind <- row_num
col_ind <- 1
while(lat_value < lat_max){
while (long_value < long_max){
df <- data[which(data$FP_latitude>=lat_value &
data$FP_latitude<(lat_value+sqr_len) &
data$FP_longitude>=long_value &
data$FP_longitude<(long_value+sqr_len)),"FP_power"]
if (NROW(data)==0){
to_add <- 0
} else{
to_add <- sum(df)
}
sqr_values[row_ind, col_ind] <- to_add
add_row <- as.data.frame(cbind(long_value, lat_value, to_add))
colnames(add_row) <- colnames(coord_values)
coord_values <- rbind(coord_values, add_row)
long_value <- long_value + sqr_len
col_ind <- col_ind + 1
}
lat_value <- lat_value + sqr_len
long_value <- long_min
col_ind <- 1
row_ind <- row_ind - 1
}
coord_values <- coord_values[-1,]
len <- NROW(unique(coord_values$value))
coord_values$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values$value,breaks=len/0.1))]
#=================
#install.packages("ggmap")
library("ggmap")
library("maps")
library("mapdata")
library("ggplot2")
temp <- as.data.frame(coord_values)
states <- map_data("state")
ca_nv <- subset(states, region %in% c("california", "nevada"))
coord_values[which(coord_values$value=="#FFFFFFFF"),3] <- NA
ggplot(data = ca_nv) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
coord_fixed(1.3) +
labs(title="Fire Power", x="Longitude", y="Latitude") +
theme(
axis.text = element_text(color="black", size=12, family = "serif"),
plot.title = element_text(color="black", size=18, hjust=0.5, family = "serif"),
axis.title.x = element_text(color="black", size=14, family = "serif"),
axis.title.y = element_text(color="black", size=14, family = "serif")) +
geom_point(data = coord_values,
mapping = aes(x = x, y = y, color=value), shape=15, size=2) +
scale_color_identity()
row_num <- round(lat_max-lat_min)/0.1
col_num <- round(long_max-long_min)/0.1
sqr_values <- data.frame(matrix(nrow = row_num, ncol=col_num))
coord_values <- data.frame(matrix(ncol = 3))
colnames(coord_values) <- c("x", "y", "value")
row_ind <- row_num
col_ind <- 1
while(lat_value < lat_max){
while (long_value < long_max){
df <- data[which(data$FP_latitude>=lat_value &
data$FP_latitude<(lat_value+sqr_len) &
data$FP_longitude>=long_value &
data$FP_longitude<(long_value+sqr_len)),"FP_power"]
if (NROW(data)==0){
to_add <- 0
} else{
to_add <- sum(df)
}
sqr_values[row_ind, col_ind] <- to_add
add_row <- as.data.frame(cbind(long_value, lat_value, to_add))
colnames(add_row) <- colnames(coord_values)
coord_values <- rbind(coord_values, add_row)
long_value <- long_value + sqr_len
col_ind <- col_ind + 1
}
lat_value <- lat_value + sqr_len
long_value <- long_min
col_ind <- 1
row_ind <- row_ind - 1
}
coord_values <- coord_values[-1,]
len <- NROW(unique(coord_values$value))
coord_values$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values$value,breaks=len/0.1))]
len
lat_max <- max(data$FP_latitude)
lat_min <- min(data$FP_latitude)
long_max <- max(data$FP_longitude)
long_min <- min(data$FP_longitude)
sqr_len <- 0.1
lat_value <- lat_min
long_value <- long_min
row_num <- round(lat_max-lat_min)/0.1
col_num <- round(long_max-long_min)/0.1
sqr_values <- data.frame(matrix(nrow = row_num, ncol=col_num))
coord_values <- data.frame(matrix(ncol = 3))
colnames(coord_values) <- c("x", "y", "value")
row_ind <- row_num
col_ind <- 1
while(lat_value < lat_max){
while (long_value < long_max){
df <- data[which(data$FP_latitude>=lat_value &
data$FP_latitude<(lat_value+sqr_len) &
data$FP_longitude>=long_value &
data$FP_longitude<(long_value+sqr_len)),"FP_power"]
if (NROW(data)==0){
to_add <- 0
} else{
to_add <- sum(df)
}
sqr_values[row_ind, col_ind] <- to_add
add_row <- as.data.frame(cbind(long_value, lat_value, to_add))
colnames(add_row) <- colnames(coord_values)
coord_values <- rbind(coord_values, add_row)
long_value <- long_value + sqr_len
col_ind <- col_ind + 1
}
lat_value <- lat_value + sqr_len
long_value <- long_min
col_ind <- 1
row_ind <- row_ind - 1
}
coord_values <- coord_values[-1,]
len <- NROW(unique(coord_values$value))
coord_values$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values$value,breaks=len/0.1))]
View(coord_values)
View(unique(coord_values$value))
temp <- as.data.frame(coord_values)
states <- map_data("state")
ca_nv <- subset(states, region %in% c("california", "nevada"))
coord_values[which(coord_values$value=="#FFFFFFFF"),3] <- NA
View(coord_values)
ggplot(data = ca_nv) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
coord_fixed(1.3) +
labs(title="Fire Power", x="Longitude", y="Latitude") +
theme(
axis.text = element_text(color="black", size=12, family = "serif"),
plot.title = element_text(color="black", size=18, hjust=0.5, family = "serif"),
axis.title.x = element_text(color="black", size=14, family = "serif"),
axis.title.y = element_text(color="black", size=14, family = "serif")) +
geom_point(data = coord_values,
mapping = aes(x = x, y = y, color=value), shape=15, size=2) +
scale_color_identity()
par(pty="s")
ggplot(data = ca_nv) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
coord_fixed(1.3) +
labs(title="Fire Power", x="Longitude", y="Latitude") +
theme(
axis.text = element_text(color="black", size=12, family = "serif"),
plot.title = element_text(color="black", size=18, hjust=0.5, family = "serif"),
axis.title.x = element_text(color="black", size=14, family = "serif"),
axis.title.y = element_text(color="black", size=14, family = "serif")) +
geom_point(data = coord_values,
mapping = aes(x = x, y = y, color=value), shape=15, size=2) +
scale_color_identity()
lat_mix
lat_min
lat_max
long_min
long_max
data <- read.csv("E:/Fire\ Downloads/all_data.csv")
lat_max <- max(data$FP_latitude)
lat_min <- min(data$FP_latitude)
long_max <- max(data$FP_longitude)
long_min <- min(data$FP_longitude)
sqr_len <- 0.1
lat_value <- lat_min
long_value <- long_min
row_num <- round(lat_max-lat_min)/0.1
col_num <- round(long_max-long_min)/0.1
sqr_values <- data.frame(matrix(nrow = row_num, ncol=col_num))
coord_values <- data.frame(matrix(ncol = 3))
colnames(coord_values) <- c("x", "y", "value")
row_ind <- row_num
col_ind <- 1
while(lat_value < lat_max){
while (long_value < long_max){
df <- data[which(data$FP_latitude>=lat_value &
data$FP_latitude<(lat_value+sqr_len) &
data$FP_longitude>=long_value &
data$FP_longitude<(long_value+sqr_len)),"FP_power"]
if (NROW(data)==0){
to_add <- 0
} else{
to_add <- sum(df)
}
sqr_values[row_ind, col_ind] <- to_add
add_row <- as.data.frame(cbind(long_value, lat_value, to_add))
colnames(add_row) <- colnames(coord_values)
coord_values <- rbind(coord_values, add_row)
long_value <- long_value + sqr_len
col_ind <- col_ind + 1
}
lat_value <- lat_value + sqr_len
long_value <- long_min
col_ind <- 1
row_ind <- row_ind - 1
}
View(coord_values)
coord_values <- coord_values[-1,]
len <- NROW((coord_values$value))
coord_values$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values$value,breaks=len/0.1))]
View(coord_values)
data <- read.csv("E:/Fire\ Downloads/all_data.csv")
lat_max <- max(data$FP_latitude)
lat_min <- min(data$FP_latitude)
long_max <- max(data$FP_longitude)
long_min <- min(data$FP_longitude)
sqr_len <- 0.1
lat_value <- lat_min
long_value <- long_min
row_num <- round(lat_max-lat_min)/0.1
col_num <- round(long_max-long_min)/0.1
sqr_values <- data.frame(matrix(nrow = row_num, ncol=col_num))
coord_values <- data.frame(matrix(ncol = 3))
colnames(coord_values) <- c("x", "y", "value")
row_ind <- row_num
col_ind <- 1
while(lat_value < lat_max){
while (long_value < long_max){
df <- data[which(data$FP_latitude>=lat_value &
data$FP_latitude<(lat_value+sqr_len) &
data$FP_longitude>=long_value &
data$FP_longitude<(long_value+sqr_len)),"FP_power"]
if (NROW(data)==0){
to_add <- 0
} else{
to_add <- sum(df)
}
sqr_values[row_ind, col_ind] <- to_add
add_row <- as.data.frame(cbind(long_value, lat_value, to_add))
colnames(add_row) <- colnames(coord_values)
coord_values <- rbind(coord_values, add_row)
long_value <- long_value + sqr_len
col_ind <- col_ind + 1
}
lat_value <- lat_value + sqr_len
long_value <- long_min
col_ind <- 1
row_ind <- row_ind - 1
}
coord_values <- coord_values[-1,]
View(coord_values)
View(sort(unique(coord_values$value)))
len <- NROW((coord_values$value))
coord_values2$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values2$value,breaks=len/0.1))]
coord_values2 <- coord_values
coord_values2$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values2$value,breaks=len/0.1))]
coord_values2
View(coord_values2)
coord_values2 <- coord_values
coord_values2[which(coord_values2$value<=350),3] <- 0
coord_values2$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values2$value,breaks=len/0.1))]
par(pty="s")
temp <- as.data.frame(coord_values2)
states <- map_data("state")
ca_nv <- subset(states, region %in% c("california", "nevada"))
coord_values2[which(coord_values2$value=="#FFFFFFFF"),3] <- NA
ggplot(data = ca_nv) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
coord_fixed(1.3) +
labs(title="Fire Power", x="Longitude", y="Latitude") +
theme(
axis.text = element_text(color="black", size=12, family = "serif"),
plot.title = element_text(color="black", size=18, hjust=0.5, family = "serif"),
axis.title.x = element_text(color="black", size=14, family = "serif"),
axis.title.y = element_text(color="black", size=14, family = "serif")) +
geom_point(data = coord_values2,
mapping = aes(x = x, y = y, color=value), shape=15, size=2) +
scale_color_identity()
coord_values2 <- coord_values
coord_values2[which(coord_values2$value<=300),3] <- 0
coord_values2$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values2$value,breaks=len/0.1))]
par(pty="s")
plot(x=coord_values[,1], y=coord_values[,2],
col=coord_values[,3],
pch=15, cex = 2.5,
xlim=c(long_min, long_max), ylim=c(lat_min, lat_max), tck=-.03,
xlab="longitude", ylab="latitude", main="Fire Power in California",
family = "serif")
temp <- as.data.frame(coord_values2)
states <- map_data("state")
ca_nv <- subset(states, region %in% c("california", "nevada"))
coord_values2[which(coord_values2$value=="#FFFFFFFF"),3] <- NA
ggplot(data = ca_nv) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
coord_fixed(1.3) +
labs(title="Fire Power", x="Longitude", y="Latitude") +
theme(
axis.text = element_text(color="black", size=12, family = "serif"),
plot.title = element_text(color="black", size=18, hjust=0.5, family = "serif"),
axis.title.x = element_text(color="black", size=14, family = "serif"),
axis.title.y = element_text(color="black", size=14, family = "serif")) +
geom_point(data = coord_values2,
mapping = aes(x = x, y = y, color=value), shape=15, size=2) +
scale_color_identity()
coord_values2 <- coord_values
coord_values2[which(coord_values2$value<=250),3] <- 0
coord_values2$value <- rev(heat.colors(len))[as.numeric(cut(
coord_values2$value,breaks=len/0.1))]
par(pty="s")
temp <- as.data.frame(coord_values2)
states <- map_data("state")
ca_nv <- subset(states, region %in% c("california", "nevada"))
coord_values2[which(coord_values2$value=="#FFFFFFFF"),3] <- NA
ggplot(data = ca_nv) +
geom_polygon(aes(x = long, y = lat, group = group),
fill = "white", color = "black") +
coord_fixed(1.3) +
labs(title="Fire Power", x="Longitude", y="Latitude") +
theme(
axis.text = element_text(color="black", size=12, family = "serif"),
plot.title = element_text(color="black", size=18, hjust=0.5, family = "serif"),
axis.title.x = element_text(color="black", size=14, family = "serif"),
axis.title.y = element_text(color="black", size=14, family = "serif")) +
geom_point(data = coord_values2,
mapping = aes(x = x, y = y, color=value), shape=15, size=2) +
scale_color_identity()
