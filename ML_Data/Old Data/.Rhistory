bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
View(bin_freq_days)
View(power)
View(power_freq)
num_bins
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]
bin_names <- data.frame(matrix(ncol = 1))
View(bin_split)
View(power_freq)
View(df)
power <- data_a$frp_aqua
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/2)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
View(bin_freq_days)
power <- data_a$frp_aqua
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2])
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
View(bin_freq_days)
power <- data_a$frp_aqua
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.5)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_names <- data.frame(matrix(ncol = 1))
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
bin_names <- bin_names[-1,]
power <- data_a$frp_aqua
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.5)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]
bin_names <- data.frame(matrix(ncol = 1))
View(bin_frew_days)
View(bin_freq_days)
power <- data_a$frp_aqua
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.05)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
View(bin_names)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]
bin_names <- data.frame(matrix(ncol = 1))
View(bin_names)
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
View(bin_names)
View(bin_freq_days)
power <- data_a$frp_aqua
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.1)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_freq_days[,2] <- bin_freq_days[,2]
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
View(bin_freq_days)
View(bin_freq)
View(bin_split)
num_bins <- ceiling(range(power_freq[,1])[2]/2)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
View(bin_freq_days)
num_bins <- ceiling(range(power_freq[,1])[2]/0.9)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
View(bin_freq)
num_bins <- ceiling(range(power_freq[,1])[2]/0.5)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
View(bin_freq)
num_bins <- ceiling(range(power_freq[,1])[2]/0.1)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
View(bin_freq_days)
View(bin_fre)
View(bin_freq)
power <- data_a$frp_aqua
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.1)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
# for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
#   bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
#     bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
# }
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_freq_days[,1], bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
power <- data_a$frp_aqua
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.5)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
library("e1071")
library("caret")
data <- read.csv("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/ml_dly_cal_r3.sel.csv")[,c(1:3,6,8,10,14,25,28,32,34:41)]
#data <- data[c(which(data$month==6),which(data$month==7),which(data$month==8)),]
data <- data[order(data$year),]
data <- data[,-c(1,2,3)]
k <- 4
set.seed(314)
predictVar = which(names(data)=="fpc1")
num_bins <- ceiling(range(data$fpc1)[2]/15)
bin_split <- bin(data$fpc1, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:NROW(bin_split)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_split[i],2,lapply(strsplit(toString(
bin_split[i]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_names <- as.numeric(as.character(bin_names))
data <- cbind(data, bin_names)
#data <- rbind(data[sample(which(data$fpc1==0),length(which(data$fpc1==0))/2),],data[which(data$fpc1!=0),])
rows <- nrow(data)
row_per_fold <- nrow(data)/k
num_train <- round(rows*(k-1)/k)
s <- split(data,(sample(nrow(data), k, replace=F)))
prev_index <- 1
for (i in 1:k){
rand_index <- sample(nrow(s[[i]]),round(nrow(s[[i]])*(k-1)/k))
train <- data[row.names(s[[i]])[rand_index],]
test <- data[row.names(s[[i]])[-rand_index],]
svm1 <- svm(factor(bin_names) ~ ., data=train,
method="C-classification", kernel="radial",
gamma=0.1, cost=10)
summary(svm1)
prediction <- predict(svm1, test)
xtab <- table(test$bin_names, prediction)
df <- as.data.frame(as.matrix(xtab))
right <- 0
total <- nrow(test)
for (j in 1:nrow(df)){
if (df[j,1]==df[j,2]){
right <- right + df[j,3]
}
}
cat("percent accuracy:", (right/total)*100, "\n")
cat("percent error:", 100-(right/total)*100, "\n")
cat("====== tuning ====== \n")
svm1_tune <- tune(svm, train.x=train, train$fpc1, kernel="radial")
svm1_post_tune <- svm(factor(bin_names)~., data=train,type='C-classification',
kernel = "radial")
summary(svm1_post_tune)
prediction2 <- predict(svm1_post_tune, test)
xtab <- table(test$bin_names, prediction2)
#print(as.matrix(xtab))
df <- as.data.frame(as.matrix(xtab))
right <- 0
total <- nrow(test)
for (j in 1:nrow(df)){
if (df[j,1]==df[j,2]){
right <- right + df[j,3]
}
}
cat("percent accuracy:", (right/total)*100, "\n")
cat("percent error:", 100-(right/total)*100, "\n")
cat("=============================================== \n")
}
data_a <- df
View(df)
i <- 43
data <- read.csv("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/Old Data/merra2_active_calfire_jja.csv")[, c("t2mmax",
"qv2m", "frp_aqua", "year", "month", "day")] #2,8
data.dist <- dist(data[, c(1, 2)])
par(mfrow = c(1, 1))
data.mapper2 <- mapper2D(
distance_matrix = dist(data.frame(x = data[, 1], y = data[, 2])),
filter_values = list(data[,1],data[,2]),
num_intervals = c(5, 5),
percent_overlap = 60,
num_bins_when_clustering = 60
)
data.graph <-
graph.adjacency(data.mapper2$adjacency, mode = "undirected")
vertex.size <- rep(0, data.mapper2$num_vertices)
df <- as.data.frame(matrix(ncol=ncol(data)))
colnames(df) <- colnames(data)
for (i in 1:data.mapper2$num_vertices) { #i is the cluster number
points.in.vertex <- data.mapper2$points_in_vertex[[i]] #pts in cluster
len <- length(points.in.vertex)
count <- 0
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
count <- count + abs(data[points.in.vertex[[j]], 3])
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
# data_active <- df[which((df$years %in% c("2006", "2008", "2015", "2016"))
#                           & (df$months %in% c("6", "7", "8"))),]
# data_inactive <- df[which((df$years %in% c("2005", "2007", "2010", "2011"))
#                             & (df$months %in% c("06", "07", "08"))),]
df <- df[-1,]
plot_density2(df)
vertex.size[i] <- count
}
i <- 43
data.graph <-
graph.adjacency(data.mapper2$adjacency, mode = "undirected")
vertex.size <- rep(0, data.mapper2$num_vertices)
df <- as.data.frame(matrix(ncol=ncol(data)))
colnames(df) <- colnames(data)
points.in.vertex <- data.mapper2$points_in_vertex[[i]] #pts in cluster
len <- length(points.in.vertex)
count <- 0
for (j in 1:len) {
if (!is.na(data[points.in.vertex[[j]], 3])) {
count <- count + abs(data[points.in.vertex[[j]], 3])
df<- as.data.frame(rbind(df, data[points.in.vertex[[j]],]))
}
}
df <- df[-1,]
plot_density2(df)
plot_density2 <- function(data_a){
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.5)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
plot_density2(df)
data_a <- df
power <- log(data_a$frp_aqua,10)
View([pwer])
View(power)
View(df)
?sapply()
data_a$frp_aqua <- sapply(data_a$frp_aqua, (+10))
data_a$frp_aqua <- sapply(data_a$frp_aqua, +10)
data_a$frp_aqua <- data_a$frp_aqua+10
View(data_a)
plot_density2 <- function(data_a){
data_a$frp_aqua <- data_a$frp_aqua+10
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.5)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
plot_density2(df)
data_a <- df
data_a$frp_aqua <- data_a$frp_aqua+10
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
View(power_freq)
num_bins <- ceiling(range(power_freq[,1])[2]/0.5)
num_bins
num_bins <- ceiling(range(power_freq[,1])[2]/0.05)
num_bins
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
View(bin_freq_days)
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
View(bin_names)
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
plot_density2 <- function(data_a){
data_a$frp_aqua <- data_a$frp_aqua+10
power <- log(data_a$frp_aqua,10)
power_freq <- as.data.frame(table(power))
power_freq[,1] <- as.numeric(as.character(power_freq[,1]))
num_bins <- ceiling(range(power_freq[,1])[2]/0.05)
bin_split <- bin(power, nbins = num_bins, method = "length")
bin_freq <- as.data.frame(table(bin_split))
bin_freq_days <- bin_freq
bin_names <- data.frame(matrix(ncol = 1))
for (i in 1:nrow(bin_freq_days)){ #because apparently idk how to use sapply
bin_names <- rbind(bin_names,substr(bin_freq_days[i,1],2,lapply(strsplit(toString(
bin_freq_days[i,1]), ''), function(x) which(x == ',')-1)))
}
bin_names <- bin_names[-1,]
bin_freq_days <- cbind(bin_names, bin_freq_days)
bin_freq_days[,1] <- as.numeric(as.character(bin_freq_days[,1]))
plot(x=bin_freq_days[,1], y=bin_freq_days[,3], type="p",xlab="bins",ylab="freq")
lines(x=bin_freq_days[,1], y=bin_freq_days[,3], type="l", col = "red")
lines(predict(loess(bin_freq_days[,3]~bin_freq_days[,1])))
}
data <- read.csv("E:/Fire\ Downloads/all_data.csv")[,c(1:5)]
setwd("C:/Users/kimh2/Desktop/Wildfire-NN-ML/ML_Data/Old Data/")
library("dplyr")
install.packages("dplyr")
#install.packages("dplyr")
library("dplyr")
data <- read.csv("merra2_active_calfire_jja.csv")
data <- read.csv("merra2_active_calfire_jja.csv")[,c(1:3, "fwi", "fcount_aqua")]
c(1:3, "fwi", "fcount_aqua")
View(data)
data <- read.csv("merra2_active_calfire_jja.csv")[,c("fwi", "fcount_aqua", "year", "month", "day")]
model <- fcount_aqua~.fwi
fit <- lm(model, data)
df <- read.csv('https://raw.githubusercontent.com/guru99-edu/R-Programming/master/women.csv'
)
df <- mtcars % > %
select(-c(am, vs, cyl, gear, carb))
View(df)
mtcars
df <- mtcars[,-c("am", "vs", "cyl", "gear", "carb")]
df <- mtcars[,c("am", "vs", "cyl", "gear", "carb")]
df <- mtcars
df <- df[,-c("am", "vs", "cyl", "gear", "carb")]
View(df)
df <- df[,c("mpg", "disp", "hp", "drat", "wt", "qsec")]
class(df$mpg)
class(df$disp)
class(data$fcount_aqua)
class(data$fwi)
data <- as.numeric(as.character(data))
View(data)
data <- read.csv("merra2_active_calfire_jja.csv")[,c("fwi", "fcount_aqua", "year", "month", "day")]
data <- as.numeric(as.character(data))
View(data)
data <- read.csv("merra2_active_calfire_jja.csv")[,c("fwi", "fcount_aqua", "year", "month", "day")]
data$fcount_aqua <- as.numeric(as.character(data$fcount_aqua))
model <- fcount_aqua~.fwi
fit <- lm(model, data)
View(df)
model <- mpg~.disp + hp + drat + wt
fit <- lm(model, df)
?lm()
model <- fcount_aqua~fwi
fit <- lm(model, data)
fit
summary(fit)
anova(fit)
plot(fit)
data <- read.csv("merra2_active_calfire_jja.csv")[,c("isi", "bui", "fcount_aqua", "year", "month", "day")]
data$fcount_aqua <- as.numeric(as.character(data$fcount_aqua))
model <- fcount_aqua~is + bui
fit <- lm(model, data)
model <- fcount_aqua~isi + bui
fit <- lm(model, data)
fit
summary(fit)
data <- read.csv("merra2_active_calfire_jja.csv")[,c("isi", "bui", "frp_aqua", "year", "month", "day")]
data$fcount_aqua <- as.numeric(as.character(data$frp_aqua))
model <- frp_aqua~isi + bui
fit <- lm(model, data)
fit
summary(fit)
data <- read.csv("merra2_active_calfire_jja.csv")[,c("fwi", "frp_aqua", "year", "month", "day")]
data$fcount_aqua <- as.numeric(as.character(data$frp_aqua))
model <- frp_aqua~isi + bui
fit <- lm(model, data)
fit
summary(fit)
data <- read.csv("merra2_active_calfire_jja.csv")[,c("fwi", "frp_aqua", "year", "month", "day")]
data$fcount_aqua <- as.numeric(as.character(data$frp_aqua))
model <- frp_aqua~fwi
fit <- lm(model, data)
fit
summary(fit)
plot(fit)
